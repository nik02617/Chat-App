{"ast":null,"code":"import React from'react';import{Typography,Box,Stack}from'@mui/material';import Loader from'./Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExerciseVideos=function ExerciseVideos(_ref){var _exerciseVideos$slice;var exerciseVideos=_ref.exerciseVideos,name=_ref.name;if(!exerciseVideos.length)return/*#__PURE__*/_jsx(Loader,{});return/*#__PURE__*/_jsxs(Box,{sx:{marginTop:{lg:'203px',xs:'20px'}},p:\"20px\",children:[/*#__PURE__*/_jsxs(Typography,{sx:{fontSize:{lg:'44px',xs:'25px'}},fontWeight:700,color:\"#000\",mb:\"33px\",children:[\"Watch \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#FF2625',textTransform:'capitalize'},children:name}),\" exercise videos\"]}),/*#__PURE__*/_jsx(Stack,{sx:{flexDirection:{lg:'row'},gap:{lg:'110px',xs:'0px'}},justifyContent:\"flex-start\",flexWrap:\"wrap\",alignItems:\"center\",children:exerciseVideos===null||exerciseVideos===void 0?void 0:(_exerciseVideos$slice=exerciseVideos.slice(0,3))===null||_exerciseVideos$slice===void 0?void 0:_exerciseVideos$slice.map(function(item,index){return/*#__PURE__*/_jsxs(\"a\",{className:\"exercise-video\",href:\"https://www.youtube.com/watch?v=\".concat(item.video.videoId),target:\"_blank\",rel:\"noreferrer\",children:[/*#__PURE__*/_jsx(\"img\",{style:{borderTopLeftRadius:'20px'},src:item.video.thumbnails[0].url,alt:item.video.title}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{sx:{fontSize:{lg:'28px',xs:'18px'}},fontWeight:600,color:\"#000\",children:item.video.title}),/*#__PURE__*/_jsx(Typography,{fontSize:\"14px\",color:\"#000\",children:item.video.channelName})]})]},index);})})]});};export default ExerciseVideos;","map":{"version":3,"names":["React","Typography","Box","Stack","Loader","jsx","_jsx","jsxs","_jsxs","ExerciseVideos","_ref","_exerciseVideos$slice","exerciseVideos","name","length","sx","marginTop","lg","xs","p","children","fontSize","fontWeight","color","mb","style","textTransform","flexDirection","gap","justifyContent","flexWrap","alignItems","slice","map","item","index","className","href","concat","video","videoId","target","rel","borderTopLeftRadius","src","thumbnails","url","alt","title","channelName"],"sources":["C:/Users/user/Desktop/WebD/gym_website/src/components/ExerciseVideos.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Box, Stack } from '@mui/material';\r\nimport Loader from './Loader';\r\n\r\nconst ExerciseVideos = ({ exerciseVideos, name }) => {\r\n  if (!exerciseVideos.length) return <Loader />;\r\n\r\n  return (\r\n    <Box sx={{ marginTop: { lg: '203px', xs: '20px' } }} p=\"20px\">\r\n      <Typography sx={{ fontSize: { lg: '44px', xs: '25px' } }} fontWeight={700} color=\"#000\" mb=\"33px\">\r\n        Watch <span style={{ color: '#FF2625', textTransform: 'capitalize' }}>{name}</span> exercise videos\r\n      </Typography>\r\n      <Stack sx={{ flexDirection: { lg: 'row' }, gap: { lg: '110px', xs: '0px' } }} justifyContent=\"flex-start\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {exerciseVideos?.slice(0, 3)?.map((item, index) => (\r\n          <a\r\n            key={index}\r\n            className=\"exercise-video\"\r\n            href={`https://www.youtube.com/watch?v=${item.video.videoId}`}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <img style={{ borderTopLeftRadius: '20px' }} src={item.video.thumbnails[0].url} alt={item.video.title} />\r\n            <Box>\r\n              <Typography sx={{ fontSize: { lg: '28px', xs: '18px' } }} fontWeight={600} color=\"#000\">\r\n                {item.video.title}\r\n              </Typography>\r\n              <Typography fontSize=\"14px\" color=\"#000\">\r\n                {item.video.channelName}\r\n              </Typography>\r\n            </Box>\r\n          </a>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExerciseVideos;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,CAAEC,GAAG,CAAEC,KAAK,KAAQ,eAAe,CACtD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9B,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAAC,IAAA,CAAiC,KAAAC,qBAAA,IAA3B,CAAAC,cAAc,CAAAF,IAAA,CAAdE,cAAc,CAAEC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAC5C,GAAI,CAACD,cAAc,CAACE,MAAM,CAAE,mBAAOR,IAAA,CAACF,MAAM,GAAE,CAAC,CAE7C,mBACEI,KAAA,CAACN,GAAG,EAACa,EAAE,CAAE,CAAEC,SAAS,CAAE,CAAEC,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAACC,CAAC,CAAC,MAAM,CAAAC,QAAA,eAC3DZ,KAAA,CAACP,UAAU,EAACc,EAAE,CAAE,CAAEM,QAAQ,CAAE,CAAEJ,EAAE,CAAE,MAAM,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAACI,UAAU,CAAE,GAAI,CAACC,KAAK,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAAAJ,QAAA,EAAC,QAC1F,cAAAd,IAAA,SAAMmB,KAAK,CAAE,CAAEF,KAAK,CAAE,SAAS,CAAEG,aAAa,CAAE,YAAa,CAAE,CAAAN,QAAA,CAAEP,IAAI,CAAO,CAAC,mBACrF,EAAY,CAAC,cACbP,IAAA,CAACH,KAAK,EAACY,EAAE,CAAE,CAAEY,aAAa,CAAE,CAAEV,EAAE,CAAE,KAAM,CAAC,CAAEW,GAAG,CAAE,CAAEX,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAE,KAAM,CAAE,CAAE,CAACW,cAAc,CAAC,YAAY,CAACC,QAAQ,CAAC,MAAM,CAACC,UAAU,CAAC,QAAQ,CAAAX,QAAA,CAC1IR,cAAc,SAAdA,cAAc,kBAAAD,qBAAA,CAAdC,cAAc,CAAEoB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,UAAArB,qBAAA,iBAA3BA,qBAAA,CAA6BsB,GAAG,CAAC,SAACC,IAAI,CAAEC,KAAK,qBAC5C3B,KAAA,MAEE4B,SAAS,CAAC,gBAAgB,CAC1BC,IAAI,oCAAAC,MAAA,CAAqCJ,IAAI,CAACK,KAAK,CAACC,OAAO,CAAG,CAC9DC,MAAM,CAAC,QAAQ,CACfC,GAAG,CAAC,YAAY,CAAAtB,QAAA,eAEhBd,IAAA,QAAKmB,KAAK,CAAE,CAAEkB,mBAAmB,CAAE,MAAO,CAAE,CAACC,GAAG,CAAEV,IAAI,CAACK,KAAK,CAACM,UAAU,CAAC,CAAC,CAAC,CAACC,GAAI,CAACC,GAAG,CAAEb,IAAI,CAACK,KAAK,CAACS,KAAM,CAAE,CAAC,cACzGxC,KAAA,CAACN,GAAG,EAAAkB,QAAA,eACFd,IAAA,CAACL,UAAU,EAACc,EAAE,CAAE,CAAEM,QAAQ,CAAE,CAAEJ,EAAE,CAAE,MAAM,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAACI,UAAU,CAAE,GAAI,CAACC,KAAK,CAAC,MAAM,CAAAH,QAAA,CACpFc,IAAI,CAACK,KAAK,CAACS,KAAK,CACP,CAAC,cACb1C,IAAA,CAACL,UAAU,EAACoB,QAAQ,CAAC,MAAM,CAACE,KAAK,CAAC,MAAM,CAAAH,QAAA,CACrCc,IAAI,CAACK,KAAK,CAACU,WAAW,CACb,CAAC,EACV,CAAC,GAdDd,KAeJ,CAAC,EACL,CAAC,CACG,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}